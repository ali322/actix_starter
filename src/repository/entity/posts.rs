//! SeaORM Entity. Generated by sea-orm-codegen 0.2.6

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "posts")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub title: String,
    #[sea_orm(column_type = "Text", nullable)]
    pub content: Option<String>,
    pub created_at: DateTime,
    pub updated_at: DateTime,
    pub user_id: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::users::Entity",
        from = "Column::UserId",
        to = "super::users::Column::Id",
        on_update = "Restrict",
        on_delete = "Restrict"
    )]
    Users,
    #[sea_orm(has_many = "super::post_has_tags::Entity")]
    PostHasTags,
}

impl Related<super::users::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Users.def()
    }
}

impl Related<super::post_has_tags::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PostHasTags.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
